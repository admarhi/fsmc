[{"path":"https://admarhi.github.io/fsmc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fsmc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/Conventions.html","id":"conventions","dir":"Articles","previous_headings":"","what":"Conventions","title":"Conventions","text":"Classes: UpperCamelCase Methods: lowerCamelCase functions: snake_case","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"mico","dir":"Articles","previous_headings":"","what":"MiCo","title":"MiCo (Microbial Community) Class","text":"MiCo class serves standard way save work data metabolism, function, microbial community.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"creation-from-data","dir":"Articles","previous_headings":"","what":"Creation from data","title":"MiCo (Microbial Community) Class","text":"create object type MiCo, user must input data listed . data can either contained single tibble data frame, saved CSV file, input separate vectors. species: character vector specifying species present community. metabolites: character vector specifying metabolites present community. fluxes: numeric vector specifying fluxes metabolite community. name: Character string giving name community. fsmc provides function syn_community() generate random MiCo objects based user parameters.","code":"s <- c(\"RQR9693L\", \"RQR9693L\", \"RQR9693L\", \"RQR9693L\", \"MEV1152G\", \"MEV1152G\", \"MEV1152G\", \"XIQ2234Q\", \"XIQ2234Q\", \"XIQ2234Q\") m <- c(\"met3\", \"met1\", \"met4\", \"met4\", \"met3\", \"met2\", \"met2\", \"met3\", \"met4\", \"met1\") f <- c(-0.3023640,  0.5344641, -2.2337716, 3.3063823, 2.5520278, 0.3388498, -1.8460633, -1.3043675, -0.4788769,  0.6027292)  newMiCo(species = s, metabolites = m, fluxes = f, name = \"example_MiCo\") #> example_MiCo: MiCo (MicrobialCommunity) Object #> - Unique microorganisms (MO): 3 #> - Unique metabolites (met): 4 makeSynMiCo(n_species = 8, max_met = 10, name = \"example_syn_MiCo\") #> example_syn_MiCo: MiCo (MicrobialCommunity) Object #> - Unique microorganisms (MO): 8 #> - Unique metabolites (met): 10"},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"create-a-mico-object-from-a-tibble","dir":"Articles","previous_headings":"","what":"Create a MiCo Object from a tibble","title":"MiCo (Microbial Community) Class","text":"fsmc contains set example data can used analysis microbial communities. example, use data created MiSoS(oup). Two example communities provided package ac_A1R12_1 cit_A1R12_1. MiCo function can take either path .csv file data frame/tibble input.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"contents","dir":"Articles","previous_headings":"","what":"Contents","title":"MiCo (Microbial Community) Class","text":"Upon creation MiCo class based three column input, additional information calculated: species metabolites fluxes edges binary matrix flux matrix name flux_consumption flux_production effective_flux_consumption effective_flux_production slots described MiCo-class() class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"MiCo (Microbial Community) Class","text":"getCo(): Returns community tibble format. getSpecies(): Retrieves species community. getMet(): Retrieves metabolites community. getFlux(): Retrieves fluxes community. getEdges(): Retrieves edges community.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"microbial-community-alignment-class","dir":"Articles","previous_headings":"","what":"Microbial Community Alignment Class","title":"Microbial Community Alignment Class","text":"Takes number MiCo objects input (? list …) additional argument specify pairwise alignment communities desired. default align communities pairwise = TRUE unique pairwise combinations aligned. alignment calculated upon creation object calculated demand?","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"methods","dir":"Articles","previous_headings":"Microbial Community Alignment Class","what":"Methods","title":"Microbial Community Alignment Class","text":"variety methods can called MiCoAl object. output methods assigned back variable containing object persist. clusterAlignment: Takes MiCoAl object input additional argument specify clustering algorithm used, works MiCoAl objects undergone pairwise alignment.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"identity","dir":"Articles","previous_headings":"Microbial Community Alignment Class","what":"Identity","title":"Microbial Community Alignment Class","text":"value gives scalar value represent identity two communities. α∑=1n(∑Ci−α)+α \\frac{\\alpha}{\\sum\\limits_{= 1}^{n}(\\sum C_i - \\alpha) + \\alpha}","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"contents","dir":"Articles","previous_headings":"Microbial Community Alignment Class","what":"Contents","title":"Microbial Community Alignment Class","text":"Communities hash/list containing MiCo objects overall alignment matrix (binary) alignment matrix longest connected components level score alignments communities highly? figure connecctedness parts alignment whicch less communities represented overall alignment?","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"classes-in-fsmc","dir":"Articles","previous_headings":"","what":"Classes in fsmc","title":"Classes","text":"fsmc built around classes simplify common workflows microbial communities. Implement S4 ? use classes","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"mico","dir":"Articles","previous_headings":"Classes in fsmc","what":"MiCo","title":"Classes","text":"MiCo class serves standard way save work data metabolism microbial community. Read class MiCo class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"micoal","dir":"Articles","previous_headings":"Classes in fsmc","what":"MiCoAl","title":"Classes","text":"MiCoAl class serves standard way align one MiCo objects. Read class MiCoAl class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/ex1-substrates.html","id":"alignment-of-communities-on-different-substrates","dir":"Articles","previous_headings":"","what":"Alignment of Communities on Different Substrates","title":"Alignment of Communities on Different Substrates","text":"vignette outlines full workflow fsmc package. includes following steps: Community object creation Community alignment Analysis alignment data analysed generated misosoup, command line tool designed identify minimum viable communities member essential community function. data provided fsmc-data repository GitHub can used test package’s functionality. data set consists 386 different microbial communities, including 272 acetate carbon source, 219 citrate carbon source, 24 fructose 6-phosphate (f6p) carbon source.","code":"sbs_url <- \"https://raw.githubusercontent.com/admarhi/fsmc-data/main/misosoup/substrate.csv\"  sbs_tb <-    read_csv(sbs_url) %>%   group_by(substrate, focal_strain) %>%    filter(solution <= 5) %>%    ungroup() %>%    nest(.by = c(\"substrate\", \"focal_strain\", \"solution\")) %>%    mutate(name = paste(substrate, focal_strain, solution, sep = \"_\")) %>%    select(\"name\", \"data\") #> Rows: 51630 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): substrate, focal_strain, species, metabolite #> dbl (2): solution, flux #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. sbs_list <- set_names(sbs_tb$data, sbs_tb$name) ac <-    keep(sbs_list, str_starts(names(sbs_list), \"ac\")) %>%   imap(newMiCo)  cit <-    keep(sbs_list, str_starts(names(sbs_list), \"cit\")) %>%    imap(newMiCo)  f6p <-    keep(sbs_list, str_starts(names(sbs_list), \"f6p\")) %>%   imap(newMiCo) ac_alig <- newMiCoAl(ac) cit_alig <- newMiCoAl(cit) f6p_alig <- newMiCoAl(f6p) compareAlignments(   ac_alig, cit_alig, f6p_alig,   names = c(\"Acetate\", \"Citrate\", \"Fructose\") ) %>% plotly::ggplotly() plotAlignmentHeatmap(ac_alig, 0.5) plotAlignmentHeatmap(cit_alig, 0.5) plotAlignmentHeatmap(f6p_alig, 0.5) plotAlignmentHeatmap(ac_alig, 0.8) plotAlignmentHeatmap(cit_alig, 0.8) plotAlignmentHeatmap(f6p_alig, 0.8) plotAlignmentHeatmap(ac_alig, 0.88) plotAlignmentHeatmap(cit_alig, 0.88) plotAlignmentHeatmap(f6p_alig, 0.88) plotAlignmentNetwork(ac_alig, 0.5) plotAlignmentNetwork(cit_alig, 0.5) plotAlignmentNetwork(f6p_alig, 0.5) plotAlignmentNetwork(ac_alig, 0.8) plotAlignmentNetwork(cit_alig, 0.8) plotAlignmentNetwork(f6p_alig, 0.8) plotAlignmentNetwork(ac_alig, 0.95) plotAlignmentNetwork(cit_alig, 0.95) plotAlignmentNetwork(f6p_alig, 0.95)"},{"path":"https://admarhi.github.io/fsmc/articles/ex2-func_type.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Alignment of Communities with Different Functional Types","text":"","code":"ft_url <- \"https://raw.githubusercontent.com/admarhi/fsmc-data/main/misosoup/func_type.csv\"  ft_tb <-    read_csv(ft_url) %>%    group_by(func_type, substrate, focal_strain) %>%    filter(solution <= 2) %>%    ungroup() %>%   nest(.by = c(\"func_type\", \"substrate\", \"focal_strain\", \"solution\")) %>%    mutate(name = paste(substrate, focal_strain, solution, sep = \"_\")) #> Rows: 76606 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (5): func_type, substrate, focal_strain, species, metabolite #> dbl (2): solution, flux #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. selection_tb <- ft_tb %>%    filter(func_type == \"selection\")  selection <-    set_names(selection_tb$data, selection_tb$name) %>%    imap(newMiCo)  facilitation_tb <- ft_tb %>%    filter(func_type == \"facilitation\")  facilitation <-    set_names(facilitation_tb$data, facilitation_tb$name) %>%    imap(newMiCo) selection_alig <- newMiCoAl(selection) facilitation_alig <- newMiCoAl(facilitation) plotAlignmentHeatmap(selection_alig, 0.5) plotAlignmentHeatmap(facilitation_alig, 0.5) plotAlignmentHeatmap(selection_alig, 0.8) plotAlignmentHeatmap(facilitation_alig, 0.8) plotAlignmentHeatmap(selection_alig, 0.95) #> [1] \"No Alignment at this level.\" plotAlignmentHeatmap(facilitation_alig, 0.95) plotAlignmentNetwork(selection_alig, 0.5) plotAlignmentNetwork(facilitation_alig, 0.5) plotAlignmentNetwork(selection_alig, 0.8) plotAlignmentNetwork(facilitation_alig, 0.8) plotAlignmentNetwork(selection_alig, 0.95) plotAlignmentNetwork(facilitation_alig, 0.95)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Alignment of Cooperative and Competitive Communities","text":"set competitve cooperative communities contain 100 communities.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"cooperative-communities","dir":"Articles","previous_headings":"Data","what":"Cooperative Communities","title":"Alignment of Cooperative and Competitive Communities","text":"cooperative dataset 100 communities, made total 50 species. community consists 10 species. Bacillus_humi_DSM_16318 species acts donor, 49 species donors receivers.","code":"coop_url <- \"https://raw.githubusercontent.com/admarhi/fsmc-data/main/cooccurrence/cooperative.csv\" coop_tb <- readr::read_csv(coop_url) #> Rows: 51854 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (3): community, species, metabolites #> dbl (2): fluxes, smetana #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. glimpse(coop_tb) #> Rows: 51,854 #> Columns: 5 #> $ community   <chr> \"coop_0\", \"coop_0\", \"coop_0\", \"coop_0\", \"coop_0\", \"coop_0\"… #> $ species     <chr> \"Rothia_nasimurium_PT_32\", \"Exiguobacterium_sibiricum_255_… #> $ metabolites <chr> \"acald\", \"acald\", \"ala__D\", \"ala__D\", \"ala__L\", \"ala__L\", … #> $ fluxes      <dbl> 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,… #> $ smetana     <dbl> 0.0128, -0.0128, 0.0096, -0.0096, 0.0352, -0.0352, 0.0128,…  coop_tb %>%    group_by(community) %>%    summarise(n_species = length(unique(species))) #> # A tibble: 100 × 2 #>    community n_species #>    <chr>         <int> #>  1 coop_0           10 #>  2 coop_1           10 #>  3 coop_10          10 #>  4 coop_11          10 #>  5 coop_12          10 #>  6 coop_13          10 #>  7 coop_14          10 #>  8 coop_15          10 #>  9 coop_16          10 #> 10 coop_17          10 #> # ℹ 90 more rows coop_tb %>%    group_by(species) %>%    filter(all(fluxes > 0)) %>%    pull(species) %>%    unique() #> [1] \"Bacillus_humi_DSM_16318\""},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"alignment","dir":"Articles","previous_headings":"Data > Cooperative Communities","what":"Alignment","title":"Alignment of Cooperative and Competitive Communities","text":"Create MiCo objects data. Create alignment cooperative communities.","code":"coop <-    coop_tb %>%    mutate(species = as.character(species)) %>%    nest(.by = community) %>%    pull(data) %>%    setNames(unique(coop_tb$community)) %>%    imap(~newMiCo(data = .x, name = .y)) coop_alig <- newMiCoAl(coop)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"competitive-communities","dir":"Articles","previous_headings":"Data","what":"Competitive Communities","title":"Alignment of Cooperative and Competitive Communities","text":"competitive dataset 50 species total, Bacillus_humi_DSM_16318 species acts donor, 49 species donors receivers. Create MiCo objects data. Create alignment competitive communities.","code":"comp_url <- \"https://raw.githubusercontent.com/admarhi/fsmc-data/main/cooccurrence/competitive.csv\" comp_tb <- readr::read_csv(comp_url) #> Rows: 32306 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (3): community, species, compound #> dbl (2): flux, smetana #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. glimpse(comp_tb) #> Rows: 32,306 #> Columns: 5 #> $ community <chr> \"comp_0\", \"comp_0\", \"comp_0\", \"comp_0\", \"comp_0\", \"comp_0\", … #> $ species   <chr> \"Bacillus_circulans_NBRC_13626\", \"Solirubrobacter_soli_DSM_2… #> $ compound  <chr> \"4abut\", \"4abut\", \"acald\", \"acald\", \"ala__L\", \"ala__L\", \"co2… #> $ flux      <dbl> 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -… #> $ smetana   <dbl> 0.210000000, -0.210000000, 0.040000000, -0.040000000, 0.0500…  comp_tb %>%    group_by(community) %>%    summarise(n_species = length(unique(species))) #> # A tibble: 100 × 2 #>    community n_species #>    <chr>         <int> #>  1 comp_0           10 #>  2 comp_1           10 #>  3 comp_10          10 #>  4 comp_11          10 #>  5 comp_12          10 #>  6 comp_13          10 #>  7 comp_14          10 #>  8 comp_15          10 #>  9 comp_16          10 #> 10 comp_17          10 #> # ℹ 90 more rows comp <-    comp_tb %>%    rename(metabolites = \"compound\", fluxes = \"flux\") %>%    nest(.by = community) %>%    pull(data) %>%    setNames(unique(comp_tb$community)) %>%    imap(~newMiCo(data = .x, name = .y)) comp_alig <- newMiCoAl(comp)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"alignment-comparison","dir":"Articles","previous_headings":"","what":"Alignment Comparison","title":"Alignment of Cooperative and Competitive Communities","text":"heatmaps show metabolic functions aligned least frac communities. metabolites y-axis consumed produce metabolites x-axis.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"cooperative-communities-50","dir":"Articles","previous_headings":"Alignment Comparison","what":"Cooperative Communities 50%","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(coop_alig, frac = 0.5)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"competitive-communities-50","dir":"Articles","previous_headings":"Alignment Comparison","what":"Competitive Communities 50%","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(comp_alig, frac = 0.5)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"cooperative-communities-80","dir":"Articles","previous_headings":"Alignment Comparison","what":"Cooperative Communities 80%","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(coop_alig, frac = 0.8)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"competitive-communities-80","dir":"Articles","previous_headings":"Alignment Comparison","what":"Competitive Communities 80%","title":"Alignment of Cooperative and Competitive Communities","text":"results indicate cooperative communities functionally similar competitive communities. minimum alignment set 50% great discrepancy extent alignment cooperative competitive communities. becomes even pronounced alignment >80%, glycerol -> glycerol edge present competitive communities, cooperative communities production hydrogen sulfide ammonia variety compounds present. can use compareAlignments function compare alignments find values, alignments contain number reactions.  can use plotly make plot interactive order easily find relevant values analysis. interactive version plot decide compare alignments align ~250 reactions , fraction 0.51 (245 reactions) cooperative 0.31 (244 reactions) competitive. 130 reactions, 0.63 0.39 cooperative competitive respectively.","code":"plotAlignmentHeatmap(comp_alig, frac = 0.8) gg <- compareAlignments(   coop_alig, comp_alig,   names = c(\"cooperative\", \"competitive\")) gg plotly::ggplotly(gg)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"comparison-of-alignments-that-share-30-reactions","dir":"Articles","previous_headings":"Alignment Comparison","what":"Comparison of alignments that share 30 reactions","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(coop_alig, 0.51) plotAlignmentHeatmap(comp_alig, 0.31)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"comparison-of-alignments-that-share-20-reactions","dir":"Articles","previous_headings":"Alignment Comparison","what":"Comparison of alignments that share 20 reactions","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(coop_alig, 0.63) plotAlignmentHeatmap(comp_alig, 0.39)"},{"path":"https://admarhi.github.io/fsmc/articles/ex3-cooccurrence.html","id":"comparison-of-alignments-that-share-20-reactions-1","dir":"Articles","previous_headings":"Alignment Comparison","what":"Comparison of alignments that share 20 reactions","title":"Alignment of Cooperative and Competitive Communities","text":"","code":"plotAlignmentHeatmap(comp_alig, 0.36) plotAlignmentHeatmap(coop_alig, 0.6)"},{"path":"https://admarhi.github.io/fsmc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian Hirt. Author, maintainer.","code":""},{"path":"https://admarhi.github.io/fsmc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hirt (2024). fsmc: Functional Similarity Microbial Communities. R package version 0.0.0.9000, https://admarhi.github.io/fsmc/.","code":"@Manual{,   title = {fsmc: Functional Similarity of Microbial Communities},   author = {Adrian Hirt},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://admarhi.github.io/fsmc/}, }"},{"path":[]},{"path":"https://admarhi.github.io/fsmc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functional Similarity of Microbial Communities","text":"can install development version fsmc github using pak devtools package.","code":"pak::pkg_install(\"admarhi/fsmc\") # or devtools::install_github(\"admarhi/fsmc\")"},{"path":"https://admarhi.github.io/fsmc/reference/MiCo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Microbial Community Class — MiCo-class","title":"Microbial Community Class — MiCo-class","text":"class represent communities microorganisms.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Microbial Community Class — MiCo-class","text":"species character vector representing microorganisms present community. metabolites character vector representing metabolites consumed produced within community. fluxes numeric vector representing fluxes metabolite community. edges list containing hash neighbouring metabolites neighbouring species. neighbouring metabolites, ingoing outgoing flux specified. bin_matrix binary matrix representing presence fluxes. name string representing name community. n_edges_matrix matrix representing number species edge two metabolites. flux_prod_j_matrix matrix representing total flux production j community. eff_flux_prod_j_matrix matrix giving effective fluxes production j community. flux_cons_i_matrix matrix giving total flux consumption community. eff_flux_cons_i_matrix matrix giving effective fluxes consumption community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Microbial Community Alignment Class — MiCoAl-class","title":"Microbial Community Alignment Class — MiCoAl-class","text":"class represent alignment multiple microbial communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Microbial Community Alignment Class — MiCoAl-class","text":"communities list objects type MicrobialCommunity. alignment list containing alignment data. comment character string containing additional information.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":null,"dir":"Reference","previous_headings":"","what":"ac_A1R12_1 — ac_A1R12_1","title":"ac_A1R12_1 — ac_A1R12_1","text":"Example community taken misosoup.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ac_A1R12_1 — ac_A1R12_1","text":"","code":"ac_A1R12_1"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ac_A1R12_1 — ac_A1R12_1","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ac_A1R12_1 — ac_A1R12_1","text":"https://github.com/sirno/misosoup","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ac_A1R12_1 — ac_A1R12_1","text":"","code":"ac_A1R12_1 #> # A tibble: 28 × 3 #>    metabolites species  fluxes #>    <chr>       <chr>     <dbl> #>  1 ac          A1R12     0.773 #>  2 ac          I2R16   -10.8   #>  3 acald       A1R12    -1.12  #>  4 acald       I2R16     1.12  #>  5 ala__D      A1R12     0.760 #>  6 ala__D      I2R16    -0.760 #>  7 ala__L      A1R12     1.22  #>  8 ala__L      I2R16    -1.22  #>  9 asp__L      A1R12    -0.583 #> 10 asp__L      I2R16     0.583 #> # ℹ 18 more rows"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_2.html","id":null,"dir":"Reference","previous_headings":"","what":"ac_A1R12_2 — ac_A1R12_2","title":"ac_A1R12_2 — ac_A1R12_2","text":"Example community taken misosoup.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ac_A1R12_2 — ac_A1R12_2","text":"","code":"ac_A1R12_2"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ac_A1R12_2 — ac_A1R12_2","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ac_A1R12_2 — ac_A1R12_2","text":"https://github.com/sirno/misosoup","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ac_A1R12_2 — ac_A1R12_2","text":"","code":"ac_A1R12_2 #> # A tibble: 38 × 3 #>    metabolites species    fluxes #>    <chr>       <chr>       <dbl> #>  1 ac          A1R12     0.949   #>  2 ac          I3M07   -10.9     #>  3 acald       A1R12     2.09    #>  4 acald       I3M07    -2.09    #>  5 ala__D      A1R12     1.24    #>  6 ala__D      I3M07    -1.24    #>  7 ala__L      A1R12     1.84    #>  8 ala__L      I3M07    -1.84    #>  9 arg__L      A1R12    -0.00286 #> 10 arg__L      I3M07     0.00286 #> # ℹ 28 more rows"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A3R04_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data from MiSoSoup — ac_A3R04_1","title":"Example Data from MiSoSoup — ac_A3R04_1","text":"A3R04 focal strain acetate medium.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A3R04_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data from MiSoSoup — ac_A3R04_1","text":"","code":"ac_A3R04_1"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A3R04_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data from MiSoSoup — ac_A3R04_1","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":null,"dir":"Reference","previous_headings":"","what":"cit_A1R12_1 — cit_A1R12_1","title":"cit_A1R12_1 — cit_A1R12_1","text":"Example community taken misosoup.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit_A1R12_1 — cit_A1R12_1","text":"","code":"cit_A1R12_1"},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cit_A1R12_1 — cit_A1R12_1","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"cit_A1R12_1 — cit_A1R12_1","text":"https://github.com/sirno/misosoup","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cit_A1R12_1 — cit_A1R12_1","text":"","code":"cit_A1R12_1 #> # A tibble: 38 × 3 #>    metabolites species    fluxes #>    <chr>       <chr>       <dbl> #>  1 ac          A1R12    10.1     #>  2 ac          m_1A01  -10.1     #>  3 acald       A1R12     8.31    #>  4 acald       m_1A01   -8.31    #>  5 ala__D      A1R12     1.30    #>  6 ala__D      m_1A01   -1.30    #>  7 ala__L      A1R12     1.90    #>  8 ala__L      m_1A01   -1.90    #>  9 arg__L      A1R12    -0.00286 #> 10 arg__L      m_1A01    0.00286 #> # ℹ 28 more rows"},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data from MiSoSoup — cit_A1R12_2","title":"Example Data from MiSoSoup — cit_A1R12_2","text":"A1R12 focal strain citrate medium.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data from MiSoSoup — cit_A1R12_2","text":"","code":"cit_A1R12_2"},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data from MiSoSoup — cit_A1R12_2","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/compareAlignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Alignments — compareAlignments","title":"Compare Alignments — compareAlignments","text":"Visual comparison multiple alignments plotting number aligned reactions fraction aligned communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/compareAlignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Alignments — compareAlignments","text":"","code":"compareAlignments(   ...,   names,   smooth = FALSE,   se = FALSE,   min_frac = NULL,   max_frac = NULL )"},{"path":"https://admarhi.github.io/fsmc/reference/compareAlignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Alignments — compareAlignments","text":"... MiCoAl objects names Character vector supplying names used labels plot smooth Boolean toggle smooth line se Boolean toggle std. error bands min_frac Numerical value specifying minimum fraction alignment max_frac Numerical value specifying maximum fraction alignment","code":""},{"path":"https://admarhi.github.io/fsmc/reference/compareAlignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Alignments — compareAlignments","text":"ggplot comparison multiple MiCoAl objects.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignMultiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Alignment of MiCo (Microbial Community) Objects — .alignMultiple","title":"Multiple Alignment of MiCo (Microbial Community) Objects — .alignMultiple","text":"Multiple Alignment MiCo (Microbial Community) Objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignMultiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Alignment of MiCo (Microbial Community) Objects — .alignMultiple","text":"","code":".alignMultiple(coms)"},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignMultiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Alignment of MiCo (Microbial Community) Objects — .alignMultiple","text":"coms Named list MiCo objects.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignMultiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Alignment of MiCo (Microbial Community) Objects — .alignMultiple","text":"list containing alignment data.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignPairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","title":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","text":"method allows alignment edges present communities.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignPairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","text":"","code":".alignPairwise(coms)"},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignPairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","text":"coms Named list MiCo objects.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignPairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","text":"List pairwise alignments.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-alignPairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Alignment of MiCo (Microbial Community) Objects — .alignPairwise","text":"","code":"###"},{"path":"https://admarhi.github.io/fsmc/reference/dot-rxnsPerLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Count of Reactions Per Level of Alignment — .rxnsPerLevel","title":"Get Count of Reactions Per Level of Alignment — .rxnsPerLevel","text":"Get Count Reactions Per Level Alignment","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-rxnsPerLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Count of Reactions Per Level of Alignment — .rxnsPerLevel","text":"","code":".rxnsPerLevel(object, name)"},{"path":"https://admarhi.github.io/fsmc/reference/dot-rxnsPerLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Count of Reactions Per Level of Alignment — .rxnsPerLevel","text":"object MiCoAl object name Name object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-rxnsPerLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Count of Reactions Per Level of Alignment — .rxnsPerLevel","text":"tibble levels count reaction","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-scoreAlignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Scoring Algorithm for MiCoAl Objects — .scoreAlignment","title":"Scoring Algorithm for MiCoAl Objects — .scoreAlignment","text":"Takes alignment object calculates overall alignment score.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-scoreAlignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scoring Algorithm for MiCoAl Objects — .scoreAlignment","text":"","code":".scoreAlignment(a)"},{"path":"https://admarhi.github.io/fsmc/reference/dot-scoreAlignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scoring Algorithm for MiCoAl Objects — .scoreAlignment","text":"alignment list","code":""},{"path":"https://admarhi.github.io/fsmc/reference/dot-scoreAlignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scoring Algorithm for MiCoAl Objects — .scoreAlignment","text":"Tibble containing scores every level alignment","code":""},{"path":"https://admarhi.github.io/fsmc/reference/findEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Edges of a Community — findEdges","title":"Get All Edges of a Community — findEdges","text":"Takes tibble describing microbial community input returns list two hashs, one giving edges metabolites species.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/findEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Edges of a Community — findEdges","text":"","code":"findEdges(tb)"},{"path":"https://admarhi.github.io/fsmc/reference/findEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Edges of a Community — findEdges","text":"tb Tibble describing microbial community","code":""},{"path":"https://admarhi.github.io/fsmc/reference/findEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Edges of a Community — findEdges","text":"list two hashs, one edges metabolites one species.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/findEdges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Edges of a Community — findEdges","text":"","code":"findEdges(ac_A1R12_1) #> $metabolites #> <hash> containing 2 key-value pair(s). #>   A1R12 : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -1.12096390 -0.58268031 -0.18475279 -0.02158742 -2.90547696 -1.45273848 -0.00238294 -2.01918234 #>       consumers : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>       prod_fluxes : 0.7729250 0.7603136 1.2168416 0.6184093 0.5068255 1.4527385 #>       producers : ac     ala__D ala__L co2    glu__L gthox  #>   I2R16 : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -10.7673345  -0.7603136  -1.2168416  -0.5068255  -1.4527385 #>       consumers : ac     ala__D ala__L glu__L gthox  #>       prod_fluxes :  1.12096390  0.58268031 12.12608512  0.18475279  0.02158742  2.90547696  1.45273848  0.00238294  2.01918234 #>       producers : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>  #> $species #> <hash> containing 14 key-value pair(s). #>   ac : <hash> containing 2 key-value pair(s). #>       from : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>   acald : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   ala__D : <hash> containing 2 key-value pair(s). #>       from : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>   ala__L : <hash> containing 2 key-value pair(s). #>       from : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>   asp__L : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   co2 : <hash> containing 2 key-value pair(s). #>       from :  #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    ac     ala__D ala__L glu__L gthox  #>   etoh : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   glu__L : <hash> containing 2 key-value pair(s). #>       from : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>   gly : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   gthox : <hash> containing 2 key-value pair(s). #>       from : acald  asp__L co2    etoh   gly    gthrd  h2o2   h2s    pyr    #>       to : acald  asp__L etoh   gly    gthrd  h2o2   h2s    pyr    #>   gthrd : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   h2o2 : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   h2s : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>   pyr : <hash> containing 2 key-value pair(s). #>       from : ac     ala__D ala__L co2    glu__L gthox  #>       to : ac     ala__D ala__L glu__L gthox  #>"},{"path":"https://admarhi.github.io/fsmc/reference/fsmc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","title":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","text":"Analysis functional (dis-) similarity microbial communities.","code":""},{"path":[]},{"path":"https://admarhi.github.io/fsmc/reference/fsmc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","text":"Maintainer: Adrian Hirt .hirt@pm.(ORCID)","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Community — getCo","title":"Get the Community — getCo","text":"Returns community single MiCo object tibble format list communities tibble format MiCoAl objects.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Community — getCo","text":"","code":"getCo(object)  # S4 method for class 'MiCo' getCo(object)  # S4 method for class 'MiCoAl' getCo(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Community — getCo","text":"object object class MiCoAl","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Community — getCo","text":"tibble community data. list community data.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get the Community — getCo","text":"getCo(MiCo): Get Community getCo(MiCoAl): Get Community","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Community — getCo","text":"","code":"c1 <- newMiCo(ac_A1R12_1) c2 <- newMiCo(ac_A1R12_2) a <- newMiCoAl(c1, c2)  getCo(c1) #> # A tibble: 28 × 3 #>    species metabolites  fluxes #>    <chr>   <chr>         <dbl> #>  1 A1R12   ac            0.773 #>  2 I2R16   ac          -10.8   #>  3 A1R12   acald        -1.12  #>  4 I2R16   acald         1.12  #>  5 A1R12   ala__D        0.760 #>  6 I2R16   ala__D       -0.760 #>  7 A1R12   ala__L        1.22  #>  8 I2R16   ala__L       -1.22  #>  9 A1R12   asp__L       -0.583 #> 10 I2R16   asp__L        0.583 #> # ℹ 18 more rows getCo(a) #> $ac_A1R12_1 #> # A tibble: 28 × 3 #>    species metabolites  fluxes #>    <chr>   <chr>         <dbl> #>  1 A1R12   ac            0.773 #>  2 I2R16   ac          -10.8   #>  3 A1R12   acald        -1.12  #>  4 I2R16   acald         1.12  #>  5 A1R12   ala__D        0.760 #>  6 I2R16   ala__D       -0.760 #>  7 A1R12   ala__L        1.22  #>  8 I2R16   ala__L       -1.22  #>  9 A1R12   asp__L       -0.583 #> 10 I2R16   asp__L        0.583 #> # ℹ 18 more rows #>  #> $ac_A1R12_2 #> # A tibble: 38 × 3 #>    species metabolites    fluxes #>    <chr>   <chr>           <dbl> #>  1 A1R12   ac            0.949   #>  2 I3M07   ac          -10.9     #>  3 A1R12   acald         2.09    #>  4 I3M07   acald        -2.09    #>  5 A1R12   ala__D        1.24    #>  6 I3M07   ala__D       -1.24    #>  7 A1R12   ala__L        1.84    #>  8 I3M07   ala__L       -1.84    #>  9 A1R12   arg__L       -0.00286 #> 10 I3M07   arg__L        0.00286 #> # ℹ 28 more rows #>"},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Edges From a MiCo (Microbial Community) Object — getEdges","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"Get Edges MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"","code":"getEdges(object, type = NULL)  # S4 method for class 'MiCo' getEdges(object, type = NULL)"},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"object object class MiCo type Character string indicating type edges return. Can either c(\"species\", \"metabolites\"), defaults NULL. NULL, types edges returned.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"list edges community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"getEdges(MiCo): Get Edges MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"Get Fluxes MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"","code":"getFlux(object)  # S4 method for class 'MiCo' getFlux(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"object object class MicrobialCommunity.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"numeric vector representing fluxes. numeric vector representing fluxes.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"getFlux(MiCo): Get flux MicrobialCommunity object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metabolites — getMet","title":"Get Metabolites — getMet","text":"Get Metabolites","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metabolites — getMet","text":"","code":"getMet(object, unique = TRUE)  # S4 method for class 'MiCo' getMet(object, unique = TRUE)  # S4 method for class 'MiCoAl' getMet(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metabolites — getMet","text":"object object class MiCo MiCoAl unique Logical toggle unique output.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metabolites — getMet","text":"character vector representing metabolites.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Species From a MiCo (Microbial Community) Object — getSpecies","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"Get Species MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"","code":"getSpecies(object)  # S4 method for class 'MiCo' getSpecies(object)  # S4 method for class 'MiCoAl' getSpecies(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"object object class MiCoAl","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"character vector representing microorganisms. character vector representing microorganisms.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"getSpecies(MiCo): Get Species MiCo (Microbial Community) Object getSpecies(MiCoAl): Get Species MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/makeSynMiCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Synthetic Microbial Communities — makeSynMiCo","title":"Generate Random Synthetic Microbial Communities — makeSynMiCo","text":"function creates synthetic data suitable demonstration purposes fsmc package.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/makeSynMiCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Synthetic Microbial Communities — makeSynMiCo","text":"","code":"makeSynMiCo(   name,   n_species,   max_met,   scale_fac = 2,   seed = FALSE,   dead_ends = FALSE,   MiCo = TRUE )"},{"path":"https://admarhi.github.io/fsmc/reference/makeSynMiCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Synthetic Microbial Communities — makeSynMiCo","text":"name Character string giving desired name community. n_species Number species community max_met Maximum number metabolites communities scale_fac Scaling factor seed Seed reproducibility dead_ends Logical value toggle dead ends data MiCo Logical value toggle return MiCo object tibble.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/makeSynMiCo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Synthetic Microbial Communities — makeSynMiCo","text":"List n_co number communities.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/makeSynMiCo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Synthetic Microbial Communities — makeSynMiCo","text":"","code":"makeSynMiCo(\"Ex. Community\", n_species = 5, max_met = 10) #> Ex. Community: MiCo (MicrobialCommunity) Object #> - Unique microorganisms (MO): 5 #> - Unique metabolites (met): 10"},{"path":"https://admarhi.github.io/fsmc/reference/misosoup.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data from MiSoSoup — misosoup","title":"Example Data from MiSoSoup — misosoup","text":"List 56 solutions MiSoSoup different focal strains different media.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/misosoup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data from MiSoSoup — misosoup","text":"","code":"misosoup"},{"path":"https://admarhi.github.io/fsmc/reference/misosoup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data from MiSoSoup — misosoup","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/newMiCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor Function for MiCo (Microbial Community) Objects — newMiCo","title":"Constructor Function for MiCo (Microbial Community) Objects — newMiCo","text":"Constructor function MiCo objects. function can used create new MiCo object CSV file vectors microorganisms, metabolites fluxes.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/newMiCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor Function for MiCo (Microbial Community) Objects — newMiCo","text":"","code":"newMiCo(   data = NULL,   name = NULL,   species = character(),   metabolites = character(),   fluxes = numeric() )"},{"path":"https://admarhi.github.io/fsmc/reference/newMiCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor Function for MiCo (Microbial Community) Objects — newMiCo","text":"data data frame/tibble path csv file storing community data. required using species, metabolites, fluxes arguments. name character vector representing name community. species character vector representing microorganisms present community. metabolites character vectors representing metabolites consumed produced within community. fluxes numeric vector representing fluxes metabolite community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/newMiCoAl.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for Microbial Community Alignment Objects — newMiCoAl","title":"Constructor for Microbial Community Alignment Objects — newMiCoAl","text":"Constructor Microbial Community Alignment Objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/newMiCoAl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for Microbial Community Alignment Objects — newMiCoAl","text":"","code":"newMiCoAl(..., pairwise = FALSE, comment = NULL)"},{"path":"https://admarhi.github.io/fsmc/reference/newMiCoAl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for Microbial Community Alignment Objects — newMiCoAl","text":"... MiCo objects aligned. pairwise Logical indicating whether perform pairwise alignment. comment comment added alignment.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pivotMiCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to Change the orientation of MiCo Input Data — pivotMiCo","title":"Functions to Change the orientation of MiCo Input Data — pivotMiCo","text":"Wrapper function around tidyr's pivot_longer() function facilitate easy transformation correct data format MiCo construction.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pivotMiCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to Change the orientation of MiCo Input Data — pivotMiCo","text":"","code":"pivotMiCo(tb, species, from, to, flux)"},{"path":"https://admarhi.github.io/fsmc/reference/pivotMiCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to Change the orientation of MiCo Input Data — pivotMiCo","text":"tb Tibble data microbial community long short format species Column name species column name column specifying met consumed name column specifying met excreted flux Column name flux column","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pivotMiCo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to Change the orientation of MiCo Input Data — pivotMiCo","text":"","code":"tb <- tibble::tribble(   ~uptake, ~secretion, ~flux, ~species,   \"m1\", \"m2\", 1, \"s1\",   \"m2\", \"m3\", 1, \"s2\",   \"m3\", \"m4\", 1, \"s3\",   \"m4\", \"m1\", 1, \"s4\")  pivotMiCo(     tb = tb,     species = \"species\",     from = \"uptake\",     to = \"secretion\",     flux = \"flux\") #> # A tibble: 8 × 3 #>   species metabolite  flux #>   <chr>   <chr>      <dbl> #> 1 s1      m1            -1 #> 2 s1      m2             1 #> 3 s2      m2            -1 #> 4 s2      m3             1 #> 5 s3      m3            -1 #> 6 s3      m4             1 #> 7 s4      m4            -1 #> 8 s4      m1             1"},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"MiCoAl Heatmap — plotAlignmentHeatmap","title":"MiCoAl Heatmap — plotAlignmentHeatmap","text":"MiCoAl Heatmap","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MiCoAl Heatmap — plotAlignmentHeatmap","text":"","code":"plotAlignmentHeatmap(object, frac)"},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MiCoAl Heatmap — plotAlignmentHeatmap","text":"object object class MiCoAl. frac Minimum relative weight maximum weight plot.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MiCoAl Heatmap — plotAlignmentHeatmap","text":"ggplot heatmap","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MiCoAl Heatmap — plotAlignmentHeatmap","text":"","code":"###"},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"MiCoAl Network Plot — plotAlignmentNetwork","title":"MiCoAl Network Plot — plotAlignmentNetwork","text":"MiCoAl Network Plot","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MiCoAl Network Plot — plotAlignmentNetwork","text":"","code":"plotAlignmentNetwork(object, frac)"},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MiCoAl Network Plot — plotAlignmentNetwork","text":"object object class MiCoAl. frac Minimum relative weight maximum weight plot.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MiCoAl Network Plot — plotAlignmentNetwork","text":"igraph network","code":""},{"path":"https://admarhi.github.io/fsmc/reference/plotAlignmentNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MiCoAl Network Plot — plotAlignmentNetwork","text":"","code":"###"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for Microbial Community objects — show,MiCo-method","title":"Show method for Microbial Community objects — show,MiCo-method","text":"Show method Microbial Community objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for Microbial Community objects — show,MiCo-method","text":"","code":"# S4 method for class 'MiCo' show(object)"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for Microbial Community objects — show,MiCo-method","text":"object object class MiCo","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"Show method Microbial Community Alignment Objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"","code":"# S4 method for class 'MiCoAl' show(object)"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"object object class MiCoAl","code":""}]
