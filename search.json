[{"path":"https://admarhi.github.io/fsmc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fsmc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://admarhi.github.io/fsmc/articles/Conventions.html","id":"overview","dir":"Articles","previous_headings":"Conventions","what":"Overview","title":"Conventions","text":"Classes: UpperCamelCase Methods: lowerCamelCase functions: snake_case file names: identical function/method/class name. representing anything particular, use--naming.","code":""},{"path":[]},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"mico","dir":"Articles","previous_headings":"","what":"MiCo","title":"Microbial Community Class","text":"MiCo class serves standard way save work data metabolism microbial community.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"creation","dir":"Articles","previous_headings":"","what":"Creation","title":"Microbial Community Class","text":"create object type MiCo, user must input data listed . data can either contained single tibble data frame, saved CSV file, input separate vectors. species: character vector specifying species present community. metabolites: character vector specifying metabolites present community. fluxes: numeric vector specifying fluxes metabolite community. name: Character string giving name community. fsmc provides function syn_community() generate random MiCo objects based user parameters.","code":"s <- c(\"RQR9693L\", \"RQR9693L\", \"RQR9693L\", \"RQR9693L\", \"MEV1152G\", \"MEV1152G\", \"MEV1152G\", \"XIQ2234Q\", \"XIQ2234Q\", \"XIQ2234Q\") m <- c(\"met3\", \"met1\", \"met4\", \"met4\", \"met3\", \"met2\", \"met2\", \"met3\", \"met4\", \"met1\") f <- c(-0.3023640,  0.5344641, -2.2337716, 3.3063823, 2.5520278, 0.3388498, -1.8460633, -1.3043675, -0.4788769,  0.6027292)  MiCo(species = s, metabolites = m, fluxes = f, name = \"example_MiCo\") #> MiCo (MicrobialCommunity) Object #>  - Unique microorganisms (MO): 3  #>  - Unique metabolites (met): 4 syn_community(n_species = 8, max_met = 10, name = \"example_syn_MiCo\") #> MiCo (MicrobialCommunity) Object #>  - Unique microorganisms (MO): 8  #>  - Unique metabolites (met): 10"},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"contents","dir":"Articles","previous_headings":"","what":"Contents","title":"Microbial Community Class","text":"Upon creation MiCo class based three column input, additional information calculated: species metabolites fluxes edges binary matrix flux matrix name flux_consumption flux_production effective_flux_consumption effective_flux_production slots described MiCo() class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCo.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Microbial Community Class","text":"getCo(): Returns community tibble format. getSpecies(): Retrieves species community. getMet(): Retrieves metabolites community. getFlux(): Retrieves fluxes community. getEdges(): Retrieves edges community.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Microbial Community Alignment Class","text":"cluster: Takes MiCoAl object input additional argument specify clustering algorithm used. works MiCoAl objects one alignment.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/class-MiCoAl.html","id":"identity","dir":"Articles","previous_headings":"","what":"Identity","title":"Microbial Community Alignment Class","text":"value gives scalar value represent identity two communities. \\[ \\frac{\\alpha}{\\sum\\limits_{= 1}^{n}(\\sum C_i - \\alpha) + \\alpha} \\]","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"classes-in-fsmc","dir":"Articles","previous_headings":"","what":"Classes in fsmc","title":"Classes","text":"fsmc built around classes simplify common workflows microbial communities. Implement S4 ? use classes","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"mico","dir":"Articles","previous_headings":"Classes in fsmc","what":"MiCo","title":"Classes","text":"MiCo class serves standard way save work data metabolism microbial community. Read class MiCo class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/articles/classes.html","id":"micoal","dir":"Articles","previous_headings":"Classes in fsmc","what":"MiCoAl","title":"Classes","text":"MiCoAl class serves standard way align one MiCo objects. Read class MiCoAl class documentation.","code":""},{"path":"https://admarhi.github.io/fsmc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian Hirt. Author, maintainer.","code":""},{"path":"https://admarhi.github.io/fsmc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hirt (2024). fsmc: Functional Similarity Microbial Communities. R package version 0.0.0.9000, https://admarhi.github.io/fsmc/.","code":"@Manual{,   title = {fsmc: Functional Similarity of Microbial Communities},   author = {Adrian Hirt},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://admarhi.github.io/fsmc/}, }"},{"path":[]},{"path":"https://admarhi.github.io/fsmc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functional Similarity of Microbial Communities","text":"can install development version fsmc github using pak devtools package.","code":"pak::pkg_install(\"admarhi/fsmc\") # or devtools::install_github(\"admarhi/fsmc\")"},{"path":"https://admarhi.github.io/fsmc/reference/MiCo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Microbial Community Class — MiCo-class","title":"Microbial Community Class — MiCo-class","text":"class represent communities microorganisms.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Microbial Community Class — MiCo-class","text":"species character vector representing microorganisms present community. metabolites character vector representing metabolites consumed produced within community. fluxes numeric vector representing fluxes metabolite community. edges list containing hash neighbouring metabolites neighbouring species. neighbouring metabolites, ingoing outgoing flux specified. bin_matrix binary matrix representing presence fluxes. flux_matrix matrix representing fluxes metabolites. names string representing name community. n_edges_matrix matrix representing number species edge two metabolites. flux_prod_j_matrix matrix representing total flux production j community. eff_flux_prod_j_matrix matrix giving effective fluxes production j community. flux_cons_i_matrix matrix giving total flux consumption community. eff_flux_cons_i_matrix matrix giving effective fluxes consumption community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor Function for MiCo (Microbial Community) Objects — MiCo","title":"Constructor Function for MiCo (Microbial Community) Objects — MiCo","text":"Constructor function MiCo objects. function can used create new MiCo object CSV file vectors microorganisms, metabolites fluxes.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor Function for MiCo (Microbial Community) Objects — MiCo","text":"","code":"MiCo(   path = NULL,   name = NULL,   species = character(),   metabolites = character(),   fluxes = numeric() )"},{"path":"https://admarhi.github.io/fsmc/reference/MiCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor Function for MiCo (Microbial Community) Objects — MiCo","text":"path Path csv file storing community data. required using MO, met, flux specify data. name character vector representing name community. species character vector representing microorganisms present community. metabolites character vectors representing metabolites consumed produced within community. fluxes numeric vector representing fluxes metabolite community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Microbial Community Alignment Class — MiCoAl-class","title":"Microbial Community Alignment Class — MiCoAl-class","text":"class represent alignment multiple microbial communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Microbial Community Alignment Class — MiCoAl-class","text":"communities list objects type MicrobialCommunity. alignment list containing alignment data.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for Microbial Community Alignment Objects — MiCoAl","title":"Constructor for Microbial Community Alignment Objects — MiCoAl","text":"Constructor Microbial Community Alignment Objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for Microbial Community Alignment Objects — MiCoAl","text":"","code":"MiCoAl(..., pairwise = FALSE)"},{"path":"https://admarhi.github.io/fsmc/reference/MiCoAl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for Microbial Community Alignment Objects — MiCoAl","text":"... MiCo objects aligned. pairwise Logical indicating whether perform pairwise alignment.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":null,"dir":"Reference","previous_headings":"","what":"ac_A1R12_1 — ac_A1R12_1","title":"ac_A1R12_1 — ac_A1R12_1","text":"Example community taken misosoup.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ac_A1R12_1 — ac_A1R12_1","text":"","code":"ac_A1R12_1"},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ac_A1R12_1 — ac_A1R12_1","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ac_A1R12_1 — ac_A1R12_1","text":"https://github.com/sirno/misosoup","code":""},{"path":"https://admarhi.github.io/fsmc/reference/ac_A1R12_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ac_A1R12_1 — ac_A1R12_1","text":"","code":"ac_A1R12_1 #> # A tibble: 59 × 3 #>    MO     met      flux #>    <chr>  <chr>   <dbl> #>  1 B3M02  ac      0.491 #>  2 m_1A01 ac     -0.491 #>  3 B3M02  acald   0.873 #>  4 m_1A01 acald  -0.873 #>  5 B3M02  ade     0.274 #>  6 m_1A01 ade    -0.274 #>  7 B3M02  ala__D -0.969 #>  8 m_1A01 ala__D  0.969 #>  9 B3M02  ala__L -1.16  #> 10 m_1A01 ala__L  1.16  #> # ℹ 49 more rows"},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":null,"dir":"Reference","previous_headings":"","what":"cit_A1R12_1 — cit_A1R12_1","title":"cit_A1R12_1 — cit_A1R12_1","text":"Example community taken misosoup.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit_A1R12_1 — cit_A1R12_1","text":"","code":"cit_A1R12_1"},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cit_A1R12_1 — cit_A1R12_1","text":"tibble columns: species Microorganisms metabolites Metabolites fluxes Fluxes metabolite","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"cit_A1R12_1 — cit_A1R12_1","text":"https://github.com/sirno/misosoup","code":""},{"path":"https://admarhi.github.io/fsmc/reference/cit_A1R12_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cit_A1R12_1 — cit_A1R12_1","text":"","code":"cit_A1R12_1 #> # A tibble: 59 × 3 #>    species metabolites fluxes #>    <chr>   <chr>        <dbl> #>  1 B3M02   ac           0.491 #>  2 m_1A01  ac          -0.491 #>  3 B3M02   acald        0.873 #>  4 m_1A01  acald       -0.873 #>  5 B3M02   ade          0.274 #>  6 m_1A01  ade         -0.274 #>  7 B3M02   ala__D      -0.969 #>  8 m_1A01  ala__D       0.969 #>  9 B3M02   ala__L      -1.16  #> 10 m_1A01  ala__L       1.16  #> # ℹ 49 more rows"},{"path":"https://admarhi.github.io/fsmc/reference/fsmc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","title":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","text":"package (one paragraph).","code":""},{"path":"https://admarhi.github.io/fsmc/reference/fsmc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fsmc: Functional Similarity of Microbial Communities — fsmc-package","text":"Maintainer: Adrian Hirt .hirt@pm.(ORCID)","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Community — getCo","title":"Get the Community — getCo","text":"Get Community","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Community — getCo","text":"","code":"getCo(object)  # S4 method for MiCo getCo(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Community — getCo","text":"object object class MiCo","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Community — getCo","text":"tibble community data. tibble community data.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get the Community — getCo","text":"getCo(MiCo): Get Community","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getCo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Community — getCo","text":"","code":"### Write examples for both classes ### Write examples for both classes"},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Edges From a MiCo (Microbial Community) Object — getEdges","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"Get Edges MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"","code":"getEdges(object, type = NULL)  # S4 method for MiCo getEdges(object, type = NULL)"},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"object object class MiCo type Character string indicating type edges return. Can either c(\"species\", \"metabolites\"), defaults NULL. NULL, types edges returned.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"list edges community.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getEdges.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Edges From a MiCo (Microbial Community) Object — getEdges","text":"getEdges(MiCo): Get Edges MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"Get Fluxes MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"","code":"getFlux(object)  # S4 method for MiCo getFlux(object)"},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"object object class MicrobialCommunity.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"numeric vector representing fluxes. numeric vector representing fluxes.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getFlux.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Fluxes from MiCo (Microbial Community) Object — getFlux","text":"getFlux(MiCo): Get flux MicrobialCommunity object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metabolites from MiCo object — getMet","title":"Get Metabolites from MiCo object — getMet","text":"Get Metabolites MiCo object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metabolites from MiCo object — getMet","text":"","code":"getMet(object, unique = FALSE)  # S4 method for MiCo getMet(object, unique = FALSE)"},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metabolites from MiCo object — getMet","text":"object object class MiCo unique Logical toggle unique output.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getMet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metabolites from MiCo object — getMet","text":"character vector representing metabolites.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Species From a MiCo (Microbial Community) Object — getSpecies","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"Get Species MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"","code":"getSpecies(object, unique = FALSE)  # S4 method for MiCo getSpecies(object, unique = FALSE)"},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"object object class MiCo unique Logical toggle unique output.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"character vector representing microorganisms. character vector representing microorganisms.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/getSpecies.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Species From a MiCo (Microbial Community) Object — getSpecies","text":"getSpecies(MiCo): Get Species MiCo (Microbial Community) Object","code":""},{"path":"https://admarhi.github.io/fsmc/reference/get_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Edges of a Community — get_edges","title":"Get All Edges of a Community — get_edges","text":"Takes tibble describing microbial community input returns list two hashs, one giving edges metabolites species.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/get_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Edges of a Community — get_edges","text":"","code":"get_edges(tb, silent = FALSE)"},{"path":"https://admarhi.github.io/fsmc/reference/get_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Edges of a Community — get_edges","text":"tb Tibble describing microbial community silent Logical toggle output","code":""},{"path":"https://admarhi.github.io/fsmc/reference/get_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Edges of a Community — get_edges","text":"list two hashs, one edges metabolites one species.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/get_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Edges of a Community — get_edges","text":"","code":"get_edges(ac_A1R12_1) #> -------- ac -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- acald -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- ade -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- ala__D -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- ala__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- arg__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- asp__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- cgly -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- co2 -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- etoh -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- f6p -------- #> Producers:   #> Consumers: m_1A01  #> -------- for -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- glu__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- gly -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- glyald -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- glyc -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- gthrd -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- h2s -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- ile__L -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- leu__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- orn -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- phe__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- pro__L -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- pyr -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- ser__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- thr__L -------- #> Producers: B3M02  #> Consumers: m_1A01  #> -------- trp__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- tyr__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- ura -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- val__L -------- #> Producers: m_1A01  #> Consumers: B3M02  #> -------- B3M02 -------- #> From: m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01  #> To: m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01  #> -------- m_1A01 -------- #> From: B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02  #> To: B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02  #> $metabolites #> <hash> containing 30 key-value pair(s). #>   ac : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.4910885 #>       consumers : m_1A01 #>       prod_fluxes : 0.4910885 #>       producers : B3M02 #>   acald : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.8734409 #>       consumers : m_1A01 #>       prod_fluxes : 0.8734409 #>       producers : B3M02 #>   ade : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2735564 #>       consumers : m_1A01 #>       prod_fluxes : 0.2735564 #>       producers : B3M02 #>   ala__D : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.9687185 #>       consumers : B3M02 #>       prod_fluxes : 0.9687185 #>       producers : m_1A01 #>   ala__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -1.164551 #>       consumers : B3M02 #>       prod_fluxes : 1.164551 #>       producers : m_1A01 #>   arg__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.1455126 #>       consumers : B3M02 #>       prod_fluxes : 0.1455126 #>       producers : m_1A01 #>   asp__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -1.296748 #>       consumers : B3M02 #>       prod_fluxes : 1.296748 #>       producers : m_1A01 #>   cgly : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.4343578 #>       consumers : m_1A01 #>       prod_fluxes : 0.4343578 #>       producers : B3M02 #>   co2 : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -4.141632 #>       consumers : B3M02 #>       prod_fluxes : 4.145762 #>       producers : m_1A01 #>   etoh : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -3.077723 #>       consumers : m_1A01 #>       prod_fluxes : 3.077723 #>       producers : B3M02 #>   f6p : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -10 #>       consumers : m_1A01 #>       prod_fluxes :  #>       producers :  #>   for : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.9164858 #>       consumers : B3M02 #>       prod_fluxes : 0.9164858 #>       producers : m_1A01 #>   glu__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.3306133 #>       consumers : B3M02 #>       prod_fluxes : 0.3306133 #>       producers : m_1A01 #>   gly : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -4.405985 #>       consumers : m_1A01 #>       prod_fluxes : 4.405985 #>       producers : B3M02 #>   glyald : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -3.235951 #>       consumers : B3M02 #>       prod_fluxes : 3.235951 #>       producers : m_1A01 #>   glyc : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -1.728675 #>       consumers : m_1A01 #>       prod_fluxes : 1.728675 #>       producers : B3M02 #>   gthrd : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.4343578 #>       consumers : B3M02 #>       prod_fluxes : 0.4343578 #>       producers : m_1A01 #>   h2s : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2250996 #>       consumers : m_1A01 #>       prod_fluxes : 0.2250996 #>       producers : B3M02 #>   ile__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2657752 #>       consumers : m_1A01 #>       prod_fluxes : 0.2657752 #>       producers : B3M02 #>   leu__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2216353 #>       consumers : B3M02 #>       prod_fluxes : 0.2216353 #>       producers : m_1A01 #>   orn : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.1455126 #>       consumers : m_1A01 #>       prod_fluxes : 0.1455126 #>       producers : B3M02 #>   phe__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.09113971 #>       consumers : B3M02 #>       prod_fluxes : 0.09113971 #>       producers : m_1A01 #>   pro__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2022205 #>       consumers : m_1A01 #>       prod_fluxes : 0.2022205 #>       producers : B3M02 #>   pyr : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -3.97563 #>       consumers : B3M02 #>       prod_fluxes : 3.97563 #>       producers : m_1A01 #>   ser__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.5845611 #>       consumers : B3M02 #>       prod_fluxes : 0.5845611 #>       producers : m_1A01 #>   thr__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2320722 #>       consumers : m_1A01 #>       prod_fluxes : 0.2320722 #>       producers : B3M02 #>   trp__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.02796348 #>       consumers : B3M02 #>       prod_fluxes : 0.02796348 #>       producers : m_1A01 #>   tyr__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.06783689 #>       consumers : B3M02 #>       prod_fluxes : 0.06783689 #>       producers : m_1A01 #>   ura : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.1627321 #>       consumers : B3M02 #>       prod_fluxes : 0.1627321 #>       producers : m_1A01 #>   val__L : <hash> containing 4 key-value pair(s). #>       cons_fluxes : -0.2084547 #>       consumers : B3M02 #>       prod_fluxes : 0.2084547 #>       producers : m_1A01 #>  #> $species #> <hash> containing 2 key-value pair(s). #>   B3M02 : <hash> containing 2 key-value pair(s). #>       from : m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 #>       to : m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 m_1A01 #>   m_1A01 : <hash> containing 2 key-value pair(s). #>       from : B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 #>       to : B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 B3M02 #>"},{"path":"https://admarhi.github.io/fsmc/reference/mico_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Alignment of Microbial Communities — mico_align","title":"Functional Alignment of Microbial Communities — mico_align","text":"Functional Alignment Microbial Communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/mico_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Alignment of Microbial Communities — mico_align","text":"","code":"mico_align(..., pairwise = FALSE)"},{"path":"https://admarhi.github.io/fsmc/reference/mico_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional Alignment of Microbial Communities — mico_align","text":"... Microbial communities pairwise Logical indicating whether perform pairwise alignment.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/mico_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional Alignment of Microbial Communities — mico_align","text":"List alignment values","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pairwise_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Alignment of Microbial Communities — pairwise_align","title":"Pairwise Alignment of Microbial Communities — pairwise_align","text":"Pairwise Alignment Microbial Communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pairwise_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Alignment of Microbial Communities — pairwise_align","text":"","code":"pairwise_align(mi_co_list)"},{"path":"https://admarhi.github.io/fsmc/reference/pairwise_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Alignment of Microbial Communities — pairwise_align","text":"mi_co_list list microbial community objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pairwise_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Alignment of Microbial Communities — pairwise_align","text":"list information alignment communities.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/pairwise_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Alignment of Microbial Communities — pairwise_align","text":"","code":"### Todo"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for Microbial Community objects — show,MiCo-method","title":"Show method for Microbial Community objects — show,MiCo-method","text":"Show method Microbial Community objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for Microbial Community objects — show,MiCo-method","text":"","code":"# S4 method for MiCo show(object)"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCo-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for Microbial Community objects — show,MiCo-method","text":"object object class MiCo","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"Show method Microbial Community Alignment Objects","code":""},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"","code":"# S4 method for MiCoAl show(object)"},{"path":"https://admarhi.github.io/fsmc/reference/show-MiCoAl-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for Microbial Community Alignment Objects — show,MiCoAl-method","text":"object object class MiCoAl","code":""},{"path":"https://admarhi.github.io/fsmc/reference/syn_community.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Synthetic Microbial Communities — syn_community","title":"Generate Random Synthetic Microbial Communities — syn_community","text":"Generate Random Synthetic Microbial Communities","code":""},{"path":"https://admarhi.github.io/fsmc/reference/syn_community.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Synthetic Microbial Communities — syn_community","text":"","code":"syn_community(   n_species,   max_met,   scale_fac = 2,   seed = FALSE,   dead_ends = FALSE,   MiCo = TRUE,   name = NULL )"},{"path":"https://admarhi.github.io/fsmc/reference/syn_community.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Synthetic Microbial Communities — syn_community","text":"max_met Maximum number metabolites communities scale_fac Scaling factor seed Seed reproducibility dead_ends Logical value toggle dead ends data MiCo Logical value toggle return MiCo object tibble. name Character string giving desired name community. n_mo Number micro organisms","code":""},{"path":"https://admarhi.github.io/fsmc/reference/syn_community.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Synthetic Microbial Communities — syn_community","text":"List n_co number communities.","code":""},{"path":"https://admarhi.github.io/fsmc/reference/syn_community.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Synthetic Microbial Communities — syn_community","text":"","code":"#"}]
